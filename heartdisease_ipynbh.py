# -*- coding: utf-8 -*-
"""Heartdisease.ipynbh

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CUSfG-KZpEPFyonAKs3elI0sCiLIcmz4
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np 
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
plt.style.use('fivethirtyeight')
import warnings
warnings.filterwarnings('ignore')
# %matplotlib inline

import tensorflow as tf

import pandas as pd
heart = pd.read_csv('heart.csv')
heart.shape

heart.head()

heart.describe()

heart.info()

heart.corr()

cp1=pd.get_dummies(heart.cp, prefix = 'cp')
cp1.head()

thal1 = pd.get_dummies(heart.thal, prefix = 'thal')
thal1.head()

heart = heart.join(cp1)
heart = heart.join(thal1)
heart.drop('cp',axis = 1, inplace = True)
heart.drop('thal', axis = 1 , inplace = True)

heart.info()

y = heart.target.copy()

X = heart.drop('target',axis = 1)

X.drop('chol',axis = 1, inplace = True)

X.drop('fbs',axis = 1, inplace = True)

X.drop('exang', axis = 1, inplace = True)
X.drop('oldpeak', axis = 1, inplace = True)

from sklearn.model_selection import train_test_split
  # 80 % go into the training test, 20% in the validation test
X_train, X_valid, y_train, y_valid = train_test_split(X, y, test_size=0.3, random_state=18)



from sklearn.linear_model import LogisticRegression

model = LogisticRegression(class_weight = 'unbalanced',verbose = 2)

model.fit(X_train, y_train)

model.score(X_train,y_train)

model.score(X_valid,y_valid)

f,ax=plt.subplots(1,2,figsize=(18,8))
heart['target'].value_counts().plot.pie(explode=[0,0.1],autopct='%1.1f%%',ax=ax[0],shadow=True)
ax[0].set_title('target')
ax[0].set_ylabel('')
sns.countplot('target',data=heart,ax=ax[1])
ax[1].set_title('target')
plt.show()